{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","login","credentials","Login","props","onSubmit","handleLogin","username","password","type","Blogi","handleBlogi","title","author","url","likes","BlogToggle","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","onClick","className","openBlog","style","children","Blog","blog","addLike","removeBlog","userName","blogiUserName","blogTitle","showOrNot","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","msg","msgType","Togglable","React","forwardRef","toggleVisibility","useImperativeHandle","buttonLabel","useField","value","setValue","onChange","event","target","cleanField","App","salasana","message","setMessage","errMessage","setErrMessage","user","setUser","blogs","setBlogs","blogFormRef","createRef","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeHandler","item","confirm","filter","preventDefault","loginService","setItem","stringify","setTimeout","like","newLike","find","b","updatedLike","blogi","updated","map","name","removeItem","current","blogObject","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a3216fa.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleLogin}>\r\n        <h2>Log in to application:</h2>\r\n        <label>Username:<br/>\r\n          <input {...props.username}></input><br/>\r\n        </label>\r\n        <label>Password:<br/>\r\n          <input {...props.password}></input><br/>\r\n        </label><br></br>\r\n\r\n        <button type = \"submit\">Kirjaudu</button>\r\n      </form><br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleBlogi}>\r\n        <h2>Create new blog</h2>\r\n        <label>Title:<br/>\r\n          <input {...props.title}></input><br/>\r\n        </label>\r\n        <label>Author:<br/>\r\n          <input {...props.author}></input><br/>\r\n        </label>\r\n        <label>Url:<br/>\r\n          <input {...props.url}></input><br/>\r\n        </label>\r\n        <label>Likes:<br/>\r\n          <input {...props.likes}></input>\r\n        </label><br/><br/>\r\n        <button type = \"submit\">Create blog</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React, { useState } from 'react'\r\n\r\nconst BlogToggle = (props, ref) => {\r\n\r\n  const [ visible, setVisible ] = useState (false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div onClick = {toggleVisibility} className = 'show'> {props.openBlog}\r\n        <div style = {hideWhenVisible}></div>\r\n      </div>\r\n      <div style = {showWhenVisible} className = 'toggleContent'>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog, userName, blogiUserName }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n\r\n  }\r\n\r\n  const blogTitle = <div>{blog.title} added by {blog.author}</div>\r\n\r\n  const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n  return(\r\n    <div style = {blogStyle} className = 'blogi'>\r\n      <BlogToggle openBlog = {blogTitle}>\r\n        <div>\r\n          <a href = {blog.url}>{blog.url}</a><br/>\r\n          {blog.likes} likes&nbsp;&nbsp;\r\n          <button onClick = {addLike}>Like</button><br/>\r\n          added by {blog.author}<br/><br/>\r\n          <div style = {showOrNot}>\r\n            <button onClick = {removeBlog}>Remove</button>\r\n          </div>\r\n        </div>\r\n      </BlogToggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func,\r\n  removeBlog: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  blogiUserName: PropTypes.string\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({ msg, msgType }) => {\r\n  if(msg === null){\r\n    return null\r\n  }\r\n  return <div className = {msgType}>\r\n    {msg}\r\n  </div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const cleanField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return{\r\n    type,\r\n    value,\r\n    onChange,\r\n    cleanField\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nimport { useField } from './hooks'\n\nconst App = () => {\n\n  const username = useField('text')\n  const salasana = useField('password')\n\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const likes = useField('text')\n\n  const [message, setMessage] = useState(null)\n  const [errMessage, setErrMessage] = useState(null)\n  const [user, setUser] = useState(null)\n  const [blogs, setBlogs] = useState([])\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll()\n      .then(response => setBlogs(response))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog =>\n    <Blog\n      key = {blog.title}\n      blog = {blog}\n      userName = {user.username}\n      blogiUserName = {blog.user.username}\n      addLike = {() => addLike(blog)}\n\n      removeBlog = {() => removeHandler(blog)}\n    />\n  )\n\n  const removeHandler = async (item) => {\n    try{\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\n        await blogService.remove(item.id)\n        setBlogs(blogs.filter(blog => blog.id !== item.id))\n      }\n    }catch(exception){\n      console.log('Error:', exception)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username.value,\n        password: salasana.value\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      username.cleanField()\n      salasana.cleanField()\n    }catch(exception){\n      username.cleanField()\n      salasana.cleanField()\n      setErrMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    blogFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n      likes: likes.value\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        title.cleanField()\n        author.cleanField()\n        url.cleanField()\n        likes.cleanField()\n\n        setMessage(`A new blog ${response.title} by ${response.author} added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n\n    const blogi = blogs.find(blog => blog.id === like.id)\n\n    try{\n      const updated = await blogService.update(blog.id, updatedLike)\n      blogi.likes = updated.likes\n      setBlogs(blogs.map(blog => blog.id === blogi.id ? blogi : blog))\n    }catch(exception){\n      console.log(exception)\n    }\n  }\n\n  return (\n    <div>\n      <Notification\n        msg = {message !== null ? message : errMessage}\n        msgType = {message !== null ? 'message' : 'error'}\n      />\n      {\n        user === null\n          ?\n          <Login\n            handleLogin = {handleLogin}\n            username = {username}\n            password = {salasana}\n          />\n          :\n          <div>\n            <h1>Blogs</h1>\n            <p>\n              {user.name} logged in&nbsp;&nbsp;\n              <button onClick = {logOut}>Log out</button>\n            </p>\n            <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\n              <Blogi\n                handleBlogi = {addBlog}\n                title = {title}\n                author = {author}\n                url = {url}\n                likes = {likes}\n              />\n            </Togglable>\n            {readBlogs()}\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}