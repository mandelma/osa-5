{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","login","credentials","Login","props","onSubmit","handleLogin","type","value","userName","onChange","usernameHandler","password","passwordHandler","Blogi","handleBlogi","title","titleHandler","author","authorHandler","url","urlHandler","likes","likesHandler","BlogToggle","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","onClick","openBlog","style","children","Blog","blog","addLike","removeBlog","showOrNot","blogiUserName","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","msg","msgType","className","Togglable","React","forwardRef","toggleVisibility","useImperativeHandle","buttonLabel","App","message","setMessage","errMessage","setErrMessage","user","setUser","username","setUsername","salasana","setSalasana","blogs","setBlogs","setTitle","setauthor","setUrl","setLikes","blogFormRef","createRef","useEffect","getBlogs","blogService","allBlogs","sortBlogs","notSorted","sort","start","end","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeHandler","item","confirm","filter","event","preventDefault","loginService","setItem","stringify","setTimeout","like","newLike","find","b","updatedLike","blogi","updated","map","target","name","removeItem","current","blogObject","then","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c81a3c9.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleLogin}>\r\n        <h2>Log in to application:</h2>\r\n        <label>Username:<br/>\r\n          <input type = \"text\"\r\n            value = {props.userName}\r\n            onChange = {props.usernameHandler}>\r\n          </input><br/>\r\n        </label>\r\n        <label>Password:<br/>\r\n          <input type = \"password\"\r\n            value = {props.password}\r\n            onChange = {props.passwordHandler}>\r\n          </input><br/>\r\n        </label><br></br>\r\n\r\n        <button type = \"submit\">Kirjaudu</button>\r\n      </form><br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleBlogi}>\r\n        <h2>Create new blog</h2>\r\n        <label>Title:<br/>\r\n          <input type = \"text\"\r\n            value = {props.title}\r\n            onChange = {props.titleHandler}>\r\n          </input><br/>\r\n        </label>\r\n        <label>Author:<br/>\r\n          <input type = \"text\"\r\n            value = {props.author}\r\n            onChange = {props.authorHandler}>\r\n          </input>\r\n        </label><br/>\r\n        <label>Url:<br/>\r\n          <input type = \"text\"\r\n            value = {props.url}\r\n            onChange = {props.urlHandler}>\r\n          </input>\r\n        </label><br/>\r\n        <label>Likes:<br/>\r\n          <input type = \"text\"\r\n            value = {props.likes}\r\n            onChange = {props.likesHandler}>\r\n          </input>\r\n        </label><br/><br/>\r\n        <button type = \"submit\">Create blog</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst BlogToggle = (props, ref) => {\r\n\r\n  const [ visible, setVisible ] = useState (false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div onClick = {toggleVisibility}> {props.openBlog}\r\n        <div style = {hideWhenVisible}></div>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlogToggle.propTypes = {\r\n  openBlog: PropTypes.string.isRequired\r\n}\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog, userName, blogiUserName }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n\r\n  }\r\n\r\n  const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n\r\n  return(\r\n    <div style = {blogStyle}>\r\n      <BlogToggle openBlog = {blog.title}>\r\n        <div>\r\n          <a href = {blog.url}>{blog.url}</a><br/>\r\n          {blog.likes} likes&nbsp;&nbsp;\r\n          <button onClick = {addLike}>Like</button><br/>\r\n          added by {blog.author}<br/><br/>\r\n          <div style = {showOrNot}>\r\n            <button onClick = {removeBlog}>Remove</button>\r\n          </div>\r\n        </div>\r\n      </BlogToggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeBlog: PropTypes.func.isRequired,\r\n  userName: PropTypes.string.isRequired,\r\n  blogiUserName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({ msg, msgType }) => {\r\n  if(msg === null){\r\n    return null\r\n  }\r\n  return <div className = {msgType}>\r\n    {msg}\r\n  </div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n\n  const [message, setMessage] = useState(null)\n  const [errMessage, setErrMessage] = useState(null)\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState('')\n  const [salasana, setSalasana] = useState('')\n  //const [blogVisible, setBlogVisible] = useState(false)\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState('')\n  const [author, setauthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [likes, setLikes] = useState('')\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    getBlogs()\n  }, [getBlogs])\n\n  const getBlogs = (async () => {\n    const allBlogs = await blogService.getAll()\n    setBlogs(sortBlogs(allBlogs))\n  })\n\n  const sortBlogs = (notSorted) => {\n    return notSorted.sort((start, end) => {\n      return start.likes - end.likes\n    })\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog =>\n    <Blog\n      key = {blog.title}\n      blog = {blog}\n      userName = {user.username}\n      blogiUserName = {blog.user.username}\n      addLike = {() => addLike(blog)}\n\n      removeBlog = {() => removeHandler(blog)}\n    />\n  )\n\n  const removeHandler = async (item) => {\n    try{\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\n        await blogService.remove(item.id)\n        setBlogs(blogs.filter(blog => blog.id !== item.id))\n      }\n    }catch(exception){\n      console.log('Error:', exception)\n    }\n\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username,\n        password: salasana\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setSalasana('')\n    }catch(exception){\n      setUsername('')\n      setSalasana('')\n      setErrMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    blogFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n      likes: likes\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        setTitle('')\n        setauthor('')\n        setUrl('')\n        setLikes('')\n\n        setMessage(`A new blog ${response.title} by ${response.author} added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n\n    const blogi = blogs.find(blog => blog.id === like.id)\n\n    try{\n      const updated = await blogService.update(blog.id, updatedLike)\n      blogi.likes = updated.likes\n      setBlogs(blogs.map(blog => blog.id === blogi.id ? blogi : blog))\n    }catch(exception){\n      console.log(exception)\n    }\n  }\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n  const passwordHandler = (event) => {\n    setSalasana(event.target.value)\n  }\n\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const authorHandler = (event) => {\n    setauthor(event.target.value)\n  }\n\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const likesHandler = (event) => {\n    setLikes(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification\n        msg = {message !== null ? message : errMessage}\n        msgType = {message !== null ? 'message' : 'error'}\n      />\n      {\n        user === null\n          ?\n          <Login\n            handleLogin = {handleLogin}\n            username = {username}\n            usernameHandler = {usernameHandler}\n            salasana = {salasana}\n            passwordHandler = {passwordHandler}\n            userName = {username}\n            password = {salasana}\n          />\n          :\n          <div>\n            <h1>Blogs</h1>\n            <p>\n              {user.name} logged in&nbsp;&nbsp;\n              <button onClick = {logOut}>Log out</button>\n            </p>\n            <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\n              <Blogi\n                handleBlogi = {addBlog}\n                title = {title}\n                author = {author}\n                url = {url}\n                likes = {likes}\n                titleHandler = {titleHandler}\n                authorHandler = {authorHandler}\n                urlHandler = {urlHandler}\n                likesHandler = {likesHandler}\n              />\n            </Togglable>\n            {readBlogs()}\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}