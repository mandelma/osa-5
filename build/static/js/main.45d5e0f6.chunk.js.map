{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","baseUrl","login","credentials","Login","props","onSubmit","handleLogin","type","value","username","onChange","usernameHandler","salasana","passwordHandler","Blogi","handleBlogi","title","titleHandler","author","authorHandler","url","urlHandler","likes","likesHandler","BlogToggle","React","forwardRef","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","openBlog","style","children","Blog","blog","addLike","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","msg","msgType","className","Togglable","buttonLabel","App","message","setMessage","errMessage","setErrMessage","user","setUser","setUsername","setSalasana","blogs","setBlogs","setTitle","setauthor","setUrl","setLikes","createRef","useEffect","getBlogs","blogService","allBlogs","sortBlogs","notSorted","sort","start","end","loggedUserJSON","window","localStorage","getItem","JSON","parse","event","preventDefault","loginService","password","setItem","stringify","setTimeout","like","newLike","find","b","updatedLike","updated","map","target","name","removeItem","blogObject","then","concat","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45d5e0f6.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n  \r\n  //const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  //return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update,\r\n    setToken,\r\n    removeToken, baseUrl\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n    const response = await axios.post(baseUrl, credentials)\r\n    return response.data\r\n}\r\n\r\nexport default {login}","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit = {props.handleLogin}>\r\n                <h2>Log in to application:</h2>\r\n                <label>Username:<br/>\r\n                    <input type = \"text\" \r\n                        value = {props.username} \r\n                        onChange = {props.usernameHandler}>\r\n                    </input><br/>\r\n                </label>\r\n                \r\n                <label>Password:<br/>\r\n                    <input type = \"password\"\r\n                        value = {props.salasana} \r\n                        onChange = {props.passwordHandler}>\r\n                    </input><br/>\r\n                </label><br></br>\r\n\r\n                <button type = \"submit\">Kirjaudu</button>\r\n            </form><br/>        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n    return(\r\n        <div>\r\n            <form onSubmit = {props.handleBlogi}>\r\n                 <h2>Create new blog</h2>\r\n                 <label>Title:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.title}\r\n                        onChange = {props.titleHandler}>\r\n                     </input><br/>\r\n                 </label>\r\n                 <label>Author:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.author}\r\n                        onChange = {props.authorHandler}>\r\n                     </input>\r\n                 </label><br/>\r\n                 <label>Url:<br/>\r\n                     <input type = \"text\"\r\n                        value = {props.url}\r\n                        onChange = {props.urlHandler}>\r\n                     </input>\r\n                 </label><br/>\r\n                 <label>Likes:<br/>\r\n                    <input type = \"text\"\r\n                        value = {props.likes}\r\n                        onChange = {props.likesHandler}>                        \r\n                    </input>\r\n                 </label><br/><br/>\r\n                 <button type = \"submit\">Create blog</button>\r\n             </form>\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blogi","import React, {useState, useImperativeHandle} from 'react'\r\n\r\nconst BlogToggle = React.forwardRef((props, ref) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    useImperativeHandle(ref, () => {\r\n        return(\r\n            toggleVisibility\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div onClick = {toggleVisibility}> {props.openBlog}\r\n            <div style = {hideWhenVisible}></div>\r\n            <div style = {showWhenVisible}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\n\r\nconst Blog = ({blog, addLike}) => {\r\n    const blogStyle = {\r\n        paddingTop: 10,\r\n        paddingLeft: 2,\r\n        border: 'solid',\r\n        borderWidth: 1,\r\n        marginBottom: 5\r\n\r\n    }\r\n    return(\r\n        <div style = {blogStyle}>\r\n            <BlogToggle openBlog = {blog.title}>\r\n                <a href = {blog.url}>www.postimees.ee</a><br/>\r\n                {blog.likes} likes&nbsp;&nbsp;\r\n                <button onClick = {addLike}>Like</button><br/>\r\n                added by {blog.author}<br/><br/>\r\n                \r\n            </BlogToggle>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({msg, msgType}) => {\r\n    if(msg === null){\r\n      return null\r\n    }\r\n    return <div className = {msgType}>\r\n      {msg}\r\n    </div>\r\n  }\r\n\r\nexport default Notification","import React, {useState} from 'react'\r\n\r\nconst Togglable = (props) => {\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    const hideWhenVisible = {display: visible ? 'none' : ''}\r\n    const showWhenVisible = {display: visible ? '' : 'none'}\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible)\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div style = {hideWhenVisible}>\r\n                <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n            </div>\r\n            <div style = {showWhenVisible}>\r\n                {props.children}\r\n                <button onClick = {toggleVisibility}>Cansel</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Togglable","import React, {useState, useEffect} from 'react';\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\n\nconst App = () => {\n\n  const [message, setMessage] = useState(null)\n  const [errMessage, setErrMessage] = useState(null)\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState(\"\")\n  const [salasana, setSalasana] = useState(\"\")\n  const [blogVisible, setBlogVisible] = useState(false)\n  const [blogs, setBlogs] = useState([])\n  const [title, setTitle] = useState('')\n  const [author, setauthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [likes, setLikes] = useState('')\n\n  const blogFormRef = React.createRef()\n\n  /* useEffect(() => {\n    blogService\n      .getAll()\n        .then(initialNotes => {\n          setBlogs(initialNotes)\n        })\n  }, []) */\n\n  useEffect(() => {\n    getBlogs()\n  }, [])\n\n  const getBlogs = (async () => {\n    const allBlogs = await blogService.getAll()\n    setBlogs(sortBlogs(allBlogs))\n  })\n\n  const sortBlogs = (notSorted) => {\n    return notSorted.sort((start, end) => {\n      return start.likes - end.likes\n    })\n  }\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog => \n    <Blog \n      key = {blog.title}\n      blog = {blog}\n      addLike = {() => addLike(blog)}\n    />\n  )\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username,\n        password: salasana\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setSalasana('')\n    }catch(exception){\n      setUsername('')\n      setSalasana('')\n      setErrMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000)\n    } \n  }\n\n const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url,\n      likes: likes\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        \n        setTitle('')\n        setauthor('')\n        setUrl('')\n        setLikes('')\n\n        setMessage(`A new blog ${response.title} by ${response.author} added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })  \n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n    \n    try{\n      const updated = await blogService.update(blog.id, updatedLike)  \n      setBlogs(blogs.map(blog => blog.id !== like.id ? blog : updated))\n      console.log(\"Response: \", updated)\n      console.log('base url: ', blogService.baseUrl)\n      console.log(\"like omanik on: \", like.author, 'ja like id: ', like.id)\n    }catch(exception){\n      console.log(exception)\n    }\n    \n\n    \n  }\n\n  const usernameHandler = (event) => {\n    setUsername(event.target.value)\n  }\n  const passwordHandler = (event) => {\n    setSalasana(event.target.value)\n  }\n\n  const titleHandler = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const authorHandler = (event) => {\n    setauthor(event.target.value)\n  }\n\n  const urlHandler = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const likesHandler = (event) => {\n    setLikes(event.target.value)\n  }\n\n  return (\n    <div>\n      <Notification\n        msg = {message !== null ? message : errMessage}\n        msgType = {message !== null ? 'message' : 'error'}\n      />\n      {\n        user === null \n        ?\n        <Login\n          handleLogin = {handleLogin} \n          username = {username}\n          usernameHandler = {usernameHandler}\n          salasana = {salasana}\n          passwordHandler = {passwordHandler}\n          username = {username}\n          salasana = {salasana}\n        />\n        :\n        <div>\n          <h1>Blogs</h1>\n          <p>\n            {user.name} logged in&nbsp;&nbsp;\n            <button onClick = {logOut}>Log out</button>\n          </p>\n          <Togglable buttonLabel = 'New blog'>\n            <Blogi              \n              handleBlogi = {addBlog}\n              title = {title}\n              author = {author}\n              url = {url}\n              likes = {likes}\n              titleHandler = {titleHandler}\n              authorHandler = {authorHandler}\n              urlHandler = {urlHandler}\n              likesHandler = {likesHandler}\n            />\n          </Togglable>\n          {readBlogs()}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}