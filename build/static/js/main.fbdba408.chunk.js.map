{"version":3,"sources":["services/blogs.js","services/login.js","components/loginForm.js","components/blogiForm.js","components/BlogToggle.js","components/Blog.js","components/Notification.js","components/Togglable.js","hooks/index.js","App.js","index.js"],"names":["token","getAll","a","axios","get","response","data","create","newObject","config","headers","Authorization","post","update","id","put","request","console","log","setToken","newToken","removeToken","remove","delete","login","credentials","Login","props","onSubmit","handleLogin","type","usernameType","value","usernameValue","onChange","usernameHandler","pwType","pwValue","passwordHandler","Blogi","handleBlogi","titleType","title","titleHandler","authorType","author","authorHandler","urlType","url","urlHandler","likesType","likes","likesHandler","BlogToggle","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","onClick","className","openBlog","style","children","Blog","blog","addLike","removeBlog","userName","blogiUserName","blogTitle","showOrNot","paddingTop","paddingLeft","border","borderWidth","marginBottom","href","Notification","msg","msgType","Togglable","React","forwardRef","toggleVisibility","useImperativeHandle","buttonLabel","useField","setValue","event","target","cleanField","App","username","salasana","message","setMessage","errMessage","setErrMessage","user","setUser","blogs","setBlogs","blogFormRef","createRef","useEffect","blogService","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","removeHandler","item","confirm","filter","preventDefault","loginService","password","setItem","stringify","setTimeout","like","newLike","find","b","updatedLike","blogi","updated","map","name","removeItem","current","blogObject","concat","key","ReactDOM","render","document","getElementById"],"mappings":"gQAGIA,EAAQ,KA4CG,GACbC,OAnCU,uCAAG,4BAAAC,EAAA,sEACUC,IAAMC,IAbf,cAYD,cACPC,EADO,yBAENA,EAASC,MAFH,2CAAH,qDAoCVC,OA/BU,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAFf,SAIUG,IAAMS,KArBf,aAqB6BJ,EAAWC,GAJzC,cAIPJ,EAJO,yBAKNA,EAASC,MALH,2CAAH,sDAgCVO,OAxBU,uCAAG,WAAOC,EAAIN,GAAX,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAFf,kBAKWG,IAAMY,IAAN,UA9BV,aA8BU,YAAwBD,GAAMN,EAAWC,GALpD,cAKLO,EALK,yBAMJA,EAAQV,MANJ,gCAQXW,QAAQC,IAAR,MARW,yDAAH,wDAyBVC,SA9Ce,SAAAC,GACfpB,EAAK,iBAAaoB,IA8ClBC,YA3CkB,WAClBrB,EAAQ,MA2CRsB,OAfU,uCAAG,WAAOR,GAAP,iBAAAZ,EAAA,6DACPO,EAAS,CACbC,QAAS,CAAEC,cAAeX,IAFf,SAKUG,IAAMoB,OAAN,UA1CT,aA0CS,YAA2BT,GAAML,GAL3C,cAKPJ,EALO,yBAMNA,EAASC,MANH,2CAAH,uDC9BG,GAAEkB,MALN,uCAAG,WAAMC,GAAN,eAAAvB,EAAA,sEACWC,IAAMS,KAHf,aAG6Ba,GAD/B,cACNpB,EADM,yBAELA,EAASC,MAFJ,2CAAH,uDCuBIoB,G,MAxBD,SAACC,GACb,OACE,6BACE,0BAAMC,SAAYD,EAAME,aACtB,sDACA,2CAAgB,6BACd,2BAAOC,KAAQH,EAAMI,aACnBC,MAASL,EAAMM,cACfC,SAAYP,EAAMQ,kBACZ,8BAEV,2CAAgB,6BACd,2BAAOL,KAAQH,EAAMS,OACnBJ,MAASL,EAAMU,QACfH,SAAYP,EAAMW,kBACZ,8BACF,6BAER,4BAAQR,KAAO,UAAf,aACK,gCCgBES,EAnCD,SAACZ,GACb,OACE,6BACE,0BAAMC,SAAYD,EAAMa,aACtB,+CACA,wCAAa,6BACX,2BAAOV,KAAQH,EAAMc,UACnBT,MAASL,EAAMe,MACfR,SAAYP,EAAMgB,eACZ,8BAEV,yCAAc,6BACZ,2BAAOb,KAAQH,EAAMiB,WACnBZ,MAASL,EAAMkB,OACfX,SAAYP,EAAMmB,iBAEd,6BACR,sCAAW,6BACT,2BAAOhB,KAAQH,EAAMoB,QACnBf,MAASL,EAAMqB,IACfd,SAAYP,EAAMsB,cAEd,6BACR,wCAAa,6BACX,2BAAOnB,KAAQH,EAAMuB,UACnBlB,MAASL,EAAMwB,MACfjB,SAAYP,EAAMyB,gBAEd,6BAAK,6BACb,4BAAQtB,KAAO,UAAf,kBCNOuB,EAvBI,SAAC1B,EAAO2B,GAAS,IAAD,EAEDC,oBAAU,GAFT,mBAEzBC,EAFyB,KAEhBC,EAFgB,KAI3BC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAMlD,OACE,6BACE,yBAAKK,QANgB,WACvBJ,GAAYD,IAKwBM,UAAY,QAA9C,IAAuDnC,EAAMoC,SAC3D,yBAAKC,MAASN,KAEhB,yBAAKM,MAASJ,EAAiBE,UAAY,iBACxCnC,EAAMsC,YC2BAC,EA1CF,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,KAAMC,EAAmD,EAAnDA,QAASC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAc7CC,EAAY,6BAAML,EAAKzB,MAAX,aAA4ByB,EAAKtB,QAE7C4B,EAAY,CAAEd,QAASW,IAAaC,EAAgB,GAAK,QAC/D,OACE,yBAAKP,MAjBW,CAChBU,WAAY,GACZC,YAAa,EACbC,OAAQ,QACRC,YAAa,EACbC,aAAc,GAYWhB,UAAY,SACnC,kBAAC,EAAD,CAAYC,SAAYS,GACtB,6BACE,uBAAGO,KAAQZ,EAAKnB,KAAMmB,EAAKnB,KAAQ,6BAClCmB,EAAKhB,MAFR,iBAGE,4BAAQU,QAAWO,GAAnB,QAAyC,6BAH3C,YAIYD,EAAKtB,OAAO,6BAAK,6BAC3B,yBAAKmB,MAASS,GACZ,4BAAQZ,QAAWQ,GAAnB,eCnBGW,EATM,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC3B,OAAW,OAARD,EACM,KAEF,yBAAKnB,UAAaoB,GACtBD,IC4BUE,EAhCGC,IAAMC,YAAW,SAAC1D,EAAO2B,GAAS,IAAD,EACnBC,oBAAS,GADU,mBAC1CC,EAD0C,KACjCC,EADiC,KAG3CC,EAAkB,CAAEC,QAASH,EAAU,OAAS,IAChDI,EAAkB,CAAED,QAASH,EAAU,GAAK,QAE5C8B,EAAmB,WACvB7B,GAAYD,IAQd,OANA+B,8BAAoBjC,GAAK,WACvB,MAAM,CACJgC,uBAKF,6BACE,yBAAKtB,MAASN,GACZ,4BAAQG,QAAWyB,GAAmB3D,EAAM6D,cAE9C,yBAAKxB,MAASJ,GACXjC,EAAMsC,SACP,4BAAQJ,QAAWyB,GAAnB,eCvBKG,EAAW,SAAC3D,GAAU,IAAD,EACNyB,mBAAS,IADH,mBACzBvB,EADyB,KAClB0D,EADkB,KAWhC,MAAM,CACJ5D,OACAE,QACAE,SAXe,SAACyD,GAChBD,EAASC,EAAMC,OAAO5D,QAWtB6D,WARiB,WACjBH,EAAS,O,yjBCEb,IA0KeI,EA1KH,WAEV,IAAMC,EAAWN,EAAS,QACpBO,EAAWP,EAAS,YAEpB/C,EAAQ+C,EAAS,QACjB5C,EAAS4C,EAAS,QAClBzC,EAAMyC,EAAS,QACftC,EAAQsC,EAAS,QARP,EAUclC,mBAAS,MAVvB,mBAUT0C,EAVS,KAUAC,EAVA,OAWoB3C,mBAAS,MAX7B,mBAWT4C,EAXS,KAWGC,EAXH,OAYQ7C,mBAAS,MAZjB,mBAYT8C,EAZS,KAYHC,EAZG,OAaU/C,mBAAS,IAbnB,mBAaTgD,EAbS,KAaFC,EAbE,KAeVC,EAAcrB,IAAMsB,YAE1BC,qBAAU,WACRC,EAAY3G,SACT4G,MAAK,SAAAxG,GAAQ,OAAImG,EAASnG,QAC5B,IAEHsG,qBAAU,WACR,IAAMG,EAAiBC,OAAOC,aAAaC,QAAQ,qBACnD,GAAGH,EAAe,CAChB,IAAMT,EAAOa,KAAKC,MAAML,GACxBR,EAAQD,GACRO,EAAYzF,SAASkF,EAAKrG,UAE3B,IAEH,IAYMoH,EAAa,uCAAG,WAAOC,GAAP,SAAAnH,EAAA,mEAEf6G,OAAOO,QAAP,sBAA8BD,EAAK3E,MAAnC,eAA+C2E,EAAKxE,SAFrC,gCAGV+D,EAAYtF,OAAO+F,EAAKvG,IAHd,OAIhB0F,EAASD,EAAMgB,QAAO,SAAApD,GAAI,OAAIA,EAAKrD,KAAOuG,EAAKvG,OAJ/B,uDAOlBG,QAAQC,IAAI,SAAZ,MAPkB,yDAAH,sDAWbW,EAAW,uCAAG,WAAO8D,GAAP,eAAAzF,EAAA,6DAClByF,EAAM6B,iBADY,kBAGGC,EAAajG,MAAM,CACpCuE,SAAUA,EAAS/D,MACnB0F,SAAU1B,EAAShE,QALL,OAGVqE,EAHU,OAQhBU,OAAOC,aAAaW,QAClB,oBAAqBT,KAAKU,UAAUvB,IAEtCO,EAAYzF,SAASkF,EAAKrG,OAC1BsG,EAAQD,GACRN,EAASF,aACTG,EAASH,aAdO,kDAgBhBE,EAASF,aACTG,EAASH,aACTO,EAAc,+BACdyB,YAAW,WACTzB,EAAc,QACb,KArBa,0DAAH,sDAyDXhC,EAAO,uCAAG,WAAO0D,GAAP,uBAAA5H,EAAA,6DACR6H,EAAUD,EAAK3E,MAAQ,EACvBgB,EAAOoC,EAAMyB,MAAK,SAAAC,GAAC,OAAIA,EAAEnH,KAAOgH,EAAKhH,MACrCoH,EAHQ,KAIT/D,EAJS,CAIHhB,MAAO4E,IAGZI,EAAQ5B,EAAMyB,MAAK,SAAA7D,GAAI,OAAIA,EAAKrD,KAAOgH,EAAKhH,MAPpC,kBAUU8F,EAAY/F,OAAOsD,EAAKrD,GAAIoH,GAVtC,OAUNE,EAVM,OAWZD,EAAMhF,MAAQiF,EAAQjF,MACtBqD,EAASD,EAAM8B,KAAI,SAAAlE,GAAI,OAAIA,EAAKrD,KAAOqH,EAAMrH,GAAKqH,EAAQhE,MAZ9C,kDAcZlD,QAAQC,IAAR,MAdY,0DAAH,sDAkBb,OACE,6BACE,kBAAC,EAAD,CACE+D,IAAmB,OAAZgB,EAAmBA,EAAUE,EACpCjB,QAAuB,OAAZe,EAAmB,UAAY,UAGjC,OAATI,EAEE,kBAAC,EAAD,CACExE,YAAeA,EACfE,aAAgBgE,EAASjE,KACzBG,cAAiB8D,EAAS/D,MAC1BG,gBAAmB4D,EAAS7D,SAC5BI,gBAAmB0D,EAAS9D,SAC5BE,OAAU4D,EAASlE,KACnBO,QAAW2D,EAAShE,QAGtB,6BACE,qCACA,2BACGqE,EAAKiC,KADR,qBAEE,4BAAQzE,QA/CL,WACbkD,OAAOC,aAAauB,WAAW,qBAC/B3B,EAAYvF,cACZiF,EAAQ,QA4CE,YAEF,kBAAC,EAAD,CAAWd,YAAc,WAAWlC,IAAOmD,GACzC,kBAAC,EAAD,CACEjE,YA7EE,SAACmD,GACfA,EAAM6B,iBACNf,EAAY+B,QAAQlD,mBACpB,IAAMmD,EAAa,CACjB/F,MAAOA,EAAMV,MACba,OAAQA,EAAOb,MACfgB,IAAKA,EAAIhB,MACTmB,MAAOA,EAAMnB,OAGf4E,EACGrG,OAAOkI,GACP5B,MAAK,SAAAxG,GACJmG,EAASD,EAAMmC,OAAOrI,IACtBqC,EAAMmD,aACNhD,EAAOgD,aACP7C,EAAI6C,aACJ1C,EAAM0C,aAENK,EAAW,cAAD,OAAe7F,EAASqC,MAAxB,eAAoCrC,EAASwC,OAA7C,YACVgF,YAAW,WACT3B,EAAW,QACV,SAwDKxD,MAASA,EAAMV,MAAOS,UAAaC,EAAMZ,KAAMa,aAAgBD,EAAMR,SACrEW,OAAUA,EAAOb,MAAOY,WAAcC,EAAOf,KAAMgB,cAAiBD,EAAOX,SAC3Ec,IAAOA,EAAIhB,MAAOe,QAAWC,EAAIlB,KAAMmB,WAAcD,EAAId,SACzDiB,MAASA,EAAMnB,MAAOkB,UAAaC,EAAMrB,KAAMsB,aAAgBD,EAAMjB,YAjI3DqE,EAAM8B,KAAI,SAAAlE,GAAI,OACpC,kBAAC,EAAD,CACEwE,IAAOxE,EAAKzB,MACZyB,KAAQA,EACRG,SAAY+B,EAAKN,SACjBxB,cAAiBJ,EAAKkC,KAAKN,SAC3B3B,QAAW,kBAAMA,EAAQD,IAEzBE,WAAc,kBAAM+C,EAAcjD,YC9CxCyE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.fbdba408.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst removeToken = () => {\r\n  token = null\r\n}\r\n\r\nconst getAll = async () => {\r\n  const response = await axios.get(baseUrl)\r\n  return response.data\r\n}\r\n\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  const response = await axios.post(baseUrl, newObject, config)\r\n  return response.data\r\n}\r\n\r\nconst update = async (id, newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n  try{\r\n    const request = await axios.put(`${baseUrl}/${id}`, newObject, config)\r\n    return request.data\r\n  }catch(exception){\r\n    console.log(exception)\r\n  }\r\n}\r\n\r\nconst remove = async (id) => {\r\n  const config = {\r\n    headers: { Authorization: token }\r\n  }\r\n\r\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\r\n  return response.data\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n  setToken,\r\n  removeToken,\r\n  remove\r\n\r\n}\r\n","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const response = await axios.post(baseUrl, credentials)\r\n  return response.data\r\n}\r\n\r\nexport default { login }","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleLogin}>\r\n        <h2>Log in to application:</h2>\r\n        <label>Username:<br/>\r\n          <input type = {props.usernameType}\r\n            value = {props.usernameValue}\r\n            onChange = {props.usernameHandler}>\r\n          </input><br/>\r\n        </label>\r\n        <label>Password:<br/>\r\n          <input type = {props.pwType}\r\n            value = {props.pwValue}\r\n            onChange = {props.passwordHandler}>\r\n          </input><br/>\r\n        </label><br></br>\r\n\r\n        <button type = \"submit\">Kirjaudu</button>\r\n      </form><br/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst Blogi = (props) => {\r\n  return(\r\n    <div>\r\n      <form onSubmit = {props.handleBlogi}>\r\n        <h2>Create new blog</h2>\r\n        <label>Title:<br/>\r\n          <input type = {props.titleType}\r\n            value = {props.title}\r\n            onChange = {props.titleHandler}>\r\n          </input><br/>\r\n        </label>\r\n        <label>Author:<br/>\r\n          <input type = {props.authorType}\r\n            value = {props.author}\r\n            onChange = {props.authorHandler}>\r\n          </input>\r\n        </label><br/>\r\n        <label>Url:<br/>\r\n          <input type = {props.urlType}\r\n            value = {props.url}\r\n            onChange = {props.urlHandler}>\r\n          </input>\r\n        </label><br/>\r\n        <label>Likes:<br/>\r\n          <input type = {props.likesType}\r\n            value = {props.likes}\r\n            onChange = {props.likesHandler}>\r\n          </input>\r\n        </label><br/><br/>\r\n        <button type = \"submit\">Create blog</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blogi","import React, { useState } from 'react'\r\n\r\nconst BlogToggle = (props, ref) => {\r\n\r\n  const [ visible, setVisible ] = useState (false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <div onClick = {toggleVisibility} className = 'show'> {props.openBlog}\r\n        <div style = {hideWhenVisible}></div>\r\n      </div>\r\n      <div style = {showWhenVisible} className = 'toggleContent'>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogToggle","import React from 'react'\r\nimport BlogToggle from './BlogToggle'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, addLike, removeBlog, userName, blogiUserName }) => {\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n\r\n  }\r\n\r\n  /* const blogTitle = () => {\r\n    return <div>{blog.title} added by {blog.author}</div>\r\n  } */\r\n\r\n  const blogTitle = <div>{blog.title} added by {blog.author}</div>\r\n\r\n  const showOrNot = { display: userName === blogiUserName ? '' : 'none' }\r\n  return(\r\n    <div style = {blogStyle} className = 'blogi'>\r\n      <BlogToggle openBlog = {blogTitle}>\r\n        <div>\r\n          <a href = {blog.url}>{blog.url}</a><br/>\r\n          {blog.likes} likes&nbsp;&nbsp;\r\n          <button onClick = {addLike}>Like</button><br/>\r\n          added by {blog.author}<br/><br/>\r\n          <div style = {showOrNot}>\r\n            <button onClick = {removeBlog}>Remove</button>\r\n          </div>\r\n        </div>\r\n      </BlogToggle>\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  blog: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func,\r\n  removeBlog: PropTypes.func,\r\n  userName: PropTypes.string,\r\n  blogiUserName: PropTypes.string\r\n}\r\n\r\nexport default Blog","import React from 'react'\r\n\r\nconst Notification = ({ msg, msgType }) => {\r\n  if(msg === null){\r\n    return null\r\n  }\r\n  return <div className = {msgType}>\r\n    {msg}\r\n  </div>\r\n}\r\n\r\nexport default Notification","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n  useImperativeHandle(ref, () => {\r\n    return{\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return(\r\n    <div>\r\n      <div style = {hideWhenVisible}>\r\n        <button onClick = {toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style = {showWhenVisible}>\r\n        {props.children}\r\n        <button onClick = {toggleVisibility}>Cansel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","import { useState } from 'react'\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const cleanField = () => {\r\n    setValue('')\r\n  }\r\n\r\n  return{\r\n    type,\r\n    value,\r\n    onChange,\r\n    cleanField\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport './index.css'\nimport Login from './components/loginForm'\nimport Blogi from './components/blogiForm'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\n\nimport { useField } from './hooks'\n\nconst App = () => {\n\n  const username = useField('text')\n  const salasana = useField('password')\n\n  const title = useField('text')\n  const author = useField('text')\n  const url = useField('text')\n  const likes = useField('text')\n\n  const [message, setMessage] = useState(null)\n  const [errMessage, setErrMessage] = useState(null)\n  const [user, setUser] = useState(null)\n  const [blogs, setBlogs] = useState([])\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService.getAll()\n      .then(response => setBlogs(response))\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if(loggedUserJSON){\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const readBlogs = () => blogs.map(blog =>\n    <Blog\n      key = {blog.title}\n      blog = {blog}\n      userName = {user.username}\n      blogiUserName = {blog.user.username}\n      addLike = {() => addLike(blog)}\n\n      removeBlog = {() => removeHandler(blog)}\n    />\n  )\n\n  const removeHandler = async (item) => {\n    try{\n      if(window.confirm(`remove blog ${item.title} by ${item.author}`)){\n        await blogService.remove(item.id)\n        setBlogs(blogs.filter(blog => blog.id !== item.id))\n      }\n    }catch(exception){\n      console.log('Error:', exception)\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try{\n      const user = await loginService.login({\n        username: username.value,\n        password: salasana.value\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      setUser(user)\n      username.cleanField()\n      salasana.cleanField()\n    }catch(exception){\n      username.cleanField()\n      salasana.cleanField()\n      setErrMessage('Wrong username or password!')\n      setTimeout(() => {\n        setErrMessage(null)\n      }, 5000)\n    }\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    blogFormRef.current.toggleVisibility()\n    const blogObject = {\n      title: title.value,\n      author: author.value,\n      url: url.value,\n      likes: likes.value\n    }\n\n    blogService\n      .create(blogObject)\n      .then(response => {\n        setBlogs(blogs.concat(response))\n        title.cleanField()\n        author.cleanField()\n        url.cleanField()\n        likes.cleanField()\n\n        setMessage(`A new blog ${response.title} by ${response.author} added!`)\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const logOut = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    blogService.removeToken()\n    setUser(null)\n  }\n\n  const addLike = async (like) => {\n    const newLike = like.likes + 1\n    const blog = blogs.find(b => b.id === like.id)\n    const updatedLike = {\n      ...blog, likes: newLike\n    }\n\n    const blogi = blogs.find(blog => blog.id === like.id)\n\n    try{\n      const updated = await blogService.update(blog.id, updatedLike)\n      blogi.likes = updated.likes\n      setBlogs(blogs.map(blog => blog.id === blogi.id ? blogi : blog))\n    }catch(exception){\n      console.log(exception)\n    }\n  }\n\n  return (\n    <div>\n      <Notification\n        msg = {message !== null ? message : errMessage}\n        msgType = {message !== null ? 'message' : 'error'}\n      />\n      {\n        user === null\n          ?\n          <Login\n            handleLogin = {handleLogin}\n            usernameType = {username.type}\n            usernameValue = {username.value}\n            usernameHandler = {username.onChange}\n            passwordHandler = {salasana.onChange}\n            pwType = {salasana.type}\n            pwValue = {salasana.value}\n          />\n          :\n          <div>\n            <h1>Blogs</h1>\n            <p>\n              {user.name} logged in&nbsp;&nbsp;\n              <button onClick = {logOut}>Log out</button>\n            </p>\n            <Togglable buttonLabel = 'New blog' ref = {blogFormRef}>\n              <Blogi\n                handleBlogi = {addBlog}\n                title = {title.value} titleType = {title.type} titleHandler = {title.onChange}\n                author = {author.value} authorType = {author.type} authorHandler = {author.onChange}\n                url = {url.value} urlType = {url.type} urlHandler = {url.onChange}\n                likes = {likes.value} likesType = {likes.type} likesHandler = {likes.onChange}\n              />\n            </Togglable>\n            {readBlogs()}\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}